/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/fragmentLoader.js":
/*!*******************************!*\
  !*** ./src/fragmentLoader.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadFragments: () => (/* binding */ loadFragments)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction loadFragments() {\n  return _loadFragments.apply(this, arguments);\n}\nfunction _loadFragments() {\n  _loadFragments = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n    var fragmentElements, FetchQueue, fetchQueue, currentIndex, elements;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          // Find all elements with ids starting with 'fragment-'\n          fragmentElements = Array.from(document.querySelectorAll('[id^=\"fragment-\"]'));\n          FetchQueue = /*#__PURE__*/function () {\n            function FetchQueue() {\n              var maxConcurrent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 3;\n              _classCallCheck(this, FetchQueue);\n              this.queue = [];\n              this.maxConcurrent = maxConcurrent;\n              this.activeFetches = 0;\n              this.maxRetries = 3; // Maximum number of retry attempts\n              this.baseDelay = 1000; // Base delay in milliseconds (1 second)\n            }\n            return _createClass(FetchQueue, [{\n              key: \"sleep\",\n              value: function () {\n                var _sleep = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(ms) {\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        return _context.abrupt(\"return\", new Promise(function (resolve) {\n                          return setTimeout(resolve, ms);\n                        }));\n                      case 1:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                }));\n                function sleep(_x) {\n                  return _sleep.apply(this, arguments);\n                }\n                return sleep;\n              }()\n            }, {\n              key: \"fetchWithRetry\",\n              value: function () {\n                var _fetchWithRetry = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(fragmentPath) {\n                  var retryCount,\n                    response,\n                    delay,\n                    _args2 = arguments;\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        retryCount = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 0;\n                        _context2.prev = 1;\n                        _context2.next = 4;\n                        return fetch(fragmentPath);\n                      case 4:\n                        response = _context2.sent;\n                        if (response.ok) {\n                          _context2.next = 7;\n                          break;\n                        }\n                        throw new Error(\"HTTP error! status: \".concat(response.status));\n                      case 7:\n                        _context2.next = 9;\n                        return response.text();\n                      case 9:\n                        return _context2.abrupt(\"return\", _context2.sent);\n                      case 12:\n                        _context2.prev = 12;\n                        _context2.t0 = _context2[\"catch\"](1);\n                        if (!(retryCount < this.maxRetries)) {\n                          _context2.next = 20;\n                          break;\n                        }\n                        // Exponential backoff: 1s, 2s, 4s\n                        delay = this.baseDelay * Math.pow(2, retryCount);\n                        console.warn(\"Retry \".concat(retryCount + 1, \"/\").concat(this.maxRetries, \" for \").concat(fragmentPath, \" after \").concat(delay, \"ms\"));\n                        _context2.next = 19;\n                        return this.sleep(delay);\n                      case 19:\n                        return _context2.abrupt(\"return\", this.fetchWithRetry(fragmentPath, retryCount + 1));\n                      case 20:\n                        throw _context2.t0;\n                      case 21:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2, this, [[1, 12]]);\n                }));\n                function fetchWithRetry(_x2) {\n                  return _fetchWithRetry.apply(this, arguments);\n                }\n                return fetchWithRetry;\n              }()\n            }, {\n              key: \"addFetch\",\n              value: function () {\n                var _addFetch = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(element) {\n                  var _this = this;\n                  var fragmentName, fragmentPath;\n                  return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n                    while (1) switch (_context5.prev = _context5.next) {\n                      case 0:\n                        fragmentName = element.id.replace('fragment-', '');\n                        fragmentPath = \"fragments/\".concat(fragmentName, \".html\");\n                        return _context5.abrupt(\"return\", new Promise(/*#__PURE__*/function () {\n                          var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(resolve, reject) {\n                            var fetchPromise;\n                            return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n                              while (1) switch (_context4.prev = _context4.next) {\n                                case 0:\n                                  try {\n                                    fetchPromise = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                                      var html, temp, scripts;\n                                      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                                        while (1) switch (_context3.prev = _context3.next) {\n                                          case 0:\n                                            _context3.prev = 0;\n                                            _context3.next = 3;\n                                            return _this.fetchWithRetry(fragmentPath);\n                                          case 3:\n                                            html = _context3.sent;\n                                            // Process the fragment\n                                            temp = document.createElement('div');\n                                            temp.innerHTML = html;\n                                            element.innerHTML = temp.innerHTML;\n\n                                            // Handle scripts\n                                            scripts = temp.getElementsByTagName('script');\n                                            Array.from(scripts).forEach(function (oldScript) {\n                                              var newScript = document.createElement('script');\n                                              Array.from(oldScript.attributes).forEach(function (attr) {\n                                                newScript.setAttribute(attr.name, attr.value);\n                                              });\n                                              newScript.textContent = oldScript.textContent;\n                                              oldScript.parentNode.removeChild(oldScript);\n                                              document.body.appendChild(newScript);\n                                            });\n                                            _this.activeFetches--;\n                                            resolve();\n                                            _context3.next = 18;\n                                            break;\n                                          case 13:\n                                            _context3.prev = 13;\n                                            _context3.t0 = _context3[\"catch\"](0);\n                                            console.error(\"Failed to load fragment \".concat(fragmentPath, \" after \").concat(_this.maxRetries, \" retries:\"), _context3.t0);\n                                            _this.activeFetches--;\n                                            reject(_context3.t0);\n                                          case 18:\n                                          case \"end\":\n                                            return _context3.stop();\n                                        }\n                                      }, _callee3, null, [[0, 13]]);\n                                    }))();\n                                    _this.queue.push(fetchPromise);\n                                    _this.activeFetches++;\n                                  } catch (error) {\n                                    reject(error);\n                                  }\n                                case 1:\n                                case \"end\":\n                                  return _context4.stop();\n                              }\n                            }, _callee4);\n                          }));\n                          return function (_x4, _x5) {\n                            return _ref.apply(this, arguments);\n                          };\n                        }()));\n                      case 3:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }, _callee5);\n                }));\n                function addFetch(_x3) {\n                  return _addFetch.apply(this, arguments);\n                }\n                return addFetch;\n              }()\n            }, {\n              key: \"processNext\",\n              value: function () {\n                var _processNext = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(element) {\n                  return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n                    while (1) switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (!(this.activeFetches < this.maxConcurrent && element)) {\n                          _context6.next = 3;\n                          break;\n                        }\n                        _context6.next = 3;\n                        return this.addFetch(element);\n                      case 3:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }, _callee6, this);\n                }));\n                function processNext(_x6) {\n                  return _processNext.apply(this, arguments);\n                }\n                return processNext;\n              }()\n            }]);\n          }(); // Initialize queue\n          fetchQueue = new FetchQueue(3);\n          currentIndex = 0;\n          elements = fragmentElements; // Assuming this is defined elsewhere\n          // Initial loading of first 3 elements\n        case 5:\n          if (!(currentIndex < elements.length && currentIndex < 3)) {\n            _context7.next = 11;\n            break;\n          }\n          _context7.next = 8;\n          return fetchQueue.processNext(elements[currentIndex]);\n        case 8:\n          currentIndex++;\n          _context7.next = 5;\n          break;\n        case 11:\n          if (!(currentIndex < elements.length)) {\n            _context7.next = 20;\n            break;\n          }\n          _context7.next = 14;\n          return Promise.race(fetchQueue.queue);\n        case 14:\n          // Remove completed fetch from queue\n          fetchQueue.queue = fetchQueue.queue.filter(function (p) {\n            return p.status === 'pending';\n          });\n          // Add next element to queue\n          _context7.next = 17;\n          return fetchQueue.processNext(elements[currentIndex]);\n        case 17:\n          currentIndex++;\n          _context7.next = 11;\n          break;\n        case 20:\n          _context7.next = 22;\n          return Promise.all(fetchQueue.queue);\n        case 22:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return _loadFragments.apply(this, arguments);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/fragmentLoader.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _fragmentLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fragmentLoader */ \"./src/fragmentLoader.js\");\n/* harmony import */ var _syncHFSpacesURLHash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./syncHFSpacesURLHash */ \"./src/syncHFSpacesURLHash.js\");\n// import { plotClusters } from './clusters'\n\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  console.log(\"DOMContentLoaded\");\n  (0,_fragmentLoader__WEBPACK_IMPORTED_MODULE_0__.loadFragments)();\n  init_memory_plot();\n  (0,_syncHFSpacesURLHash__WEBPACK_IMPORTED_MODULE_1__.syncHFSpacesURLHash)();\n}, {\n  once: true\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDZ0Q7QUFDVztBQUUzREUsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsRUFBRSxZQUFNO0VBQ2hEQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0IsQ0FBQztFQUMvQkwsOERBQWEsQ0FBQyxDQUFDO0VBQ2ZNLGdCQUFnQixDQUFDLENBQUM7RUFDbEJMLHlFQUFtQixDQUFDLENBQUM7QUFDekIsQ0FBQyxFQUFFO0VBQUVNLElBQUksRUFBRTtBQUFLLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2dwb3N0Ly4vc3JjL2luZGV4LmpzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgcGxvdENsdXN0ZXJzIH0gZnJvbSAnLi9jbHVzdGVycydcclxuaW1wb3J0IHsgbG9hZEZyYWdtZW50cyB9IGZyb20gJy4vZnJhZ21lbnRMb2FkZXInXHJcbmltcG9ydCB7IHN5bmNIRlNwYWNlc1VSTEhhc2ggfSBmcm9tICcuL3N5bmNIRlNwYWNlc1VSTEhhc2gnXHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhcIkRPTUNvbnRlbnRMb2FkZWRcIik7XHJcbiAgICBsb2FkRnJhZ21lbnRzKCk7XHJcbiAgICBpbml0X21lbW9yeV9wbG90KCk7XHJcbiAgICBzeW5jSEZTcGFjZXNVUkxIYXNoKCk7XHJcbn0sIHsgb25jZTogdHJ1ZSB9KTtcclxuIl0sIm5hbWVzIjpbImxvYWRGcmFnbWVudHMiLCJzeW5jSEZTcGFjZXNVUkxIYXNoIiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiY29uc29sZSIsImxvZyIsImluaXRfbWVtb3J5X3Bsb3QiLCJvbmNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/syncHFSpacesURLHash.js":
/*!************************************!*\
  !*** ./src/syncHFSpacesURLHash.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   syncHFSpacesURLHash: () => (/* binding */ syncHFSpacesURLHash)\n/* harmony export */ });\nvar queryArg = \"section\";\nfunction syncHFSpacesURLHash() {\n  // Handle explicit section requests (don't update hash automatically on load)\n  var hasExplicitRequest = handleExplicitSectionRequest();\n\n  // Set up hash change monitoring\n  updateHashBasedOnHashChange();\n\n  // Always set up scroll monitoring to update hash during scrolling\n  setupScrollMonitoring();\n\n  // If no explicit request, we don't update the hash on initial load\n  // The hash will only start updating when the user scrolls\n}\nfunction handleExplicitSectionRequest() {\n  // Check for section parameter in URL\n  var urlParams = new URLSearchParams(window.location.search);\n  var sectionId = urlParams.get(queryArg);\n\n  // If we have an explicit section request\n  if (sectionId) {\n    var targetElement = document.getElementById(sectionId);\n    if (targetElement) {\n      // Slight delay to ensure the browser doesn't try to do its own scrolling first\n      setTimeout(function () {\n        targetElement.scrollIntoView();\n        history.replaceState(null, null, \"#\".concat(sectionId));\n      }, 100);\n    }\n    return true;\n  }\n\n  // No explicit section parameter found\n  return false;\n}\nfunction setupScrollMonitoring() {\n  // Variables to manage throttling\n  var isScrolling = false;\n  var lastKnownScrollPosition = 0;\n  var initialScroll = true;\n\n  // Add the scroll event listener\n  window.addEventListener('scroll', function () {\n    lastKnownScrollPosition = window.scrollY;\n    if (!isScrolling) {\n      window.requestAnimationFrame(function () {\n        // Skip the first scroll event which might be browser's automatic scroll\n        // to a hash on page load\n        if (initialScroll) {\n          initialScroll = false;\n        } else {\n          updateHashBasedOnScroll(lastKnownScrollPosition);\n        }\n        isScrolling = false;\n      });\n    }\n    isScrolling = true;\n  });\n}\n\n// Function to update the URL hash based on scroll position\nfunction updateHashBasedOnScroll(scrollPosition) {\n  var closestHeading = findClosestHeading(scrollPosition);\n\n  // Update the URL hash if we found a closest element\n  if (closestHeading && closestHeading.id) {\n    // Only update if the hash is different to avoid unnecessary operations\n    if (window.location.hash !== \"#\".concat(closestHeading.id)) {\n      silentlyUpdateHash(closestHeading.id);\n      postMessageToHFSpaces(closestHeading.id);\n    }\n  }\n}\n\n// Find the closest heading to the current scroll position\nfunction findClosestHeading(scrollPosition) {\n  // Get only heading elements with IDs that we want to track\n  var headingsWithIds = Array.from(document.querySelectorAll('h1[id], h2[id], h3[id], h4[id], h5[id], h6[id]'));\n\n  // Skip if there are no headings with IDs\n  if (headingsWithIds.length === 0) return null;\n\n  // Find the element closest to the middle of the viewport\n  var closestHeading = null;\n  var closestDistance = Infinity;\n  var viewportMiddle = scrollPosition + window.innerHeight / 2;\n\n  // Iterate through all headings to find the closest one\n  headingsWithIds.forEach(function (heading) {\n    var headingTop = heading.getBoundingClientRect().top + scrollPosition;\n    var distance = Math.abs(headingTop - viewportMiddle);\n    if (distance < closestDistance) {\n      closestDistance = distance;\n      closestHeading = heading;\n    }\n  });\n  return closestHeading;\n}\n\n// Update hash without triggering scroll or other side effects\nfunction silentlyUpdateHash(id) {\n  history.replaceState(null, null, \"#\".concat(id));\n}\nfunction updateHashBasedOnHashChange() {\n  window.addEventListener('hashchange', function () {\n    var elementId = window.location.hash.slice(1);\n    postMessageToHFSpaces(elementId);\n  });\n}\nfunction postMessageToHFSpaces(elementId) {\n  var parentOrigin = \"https://huggingface.co\";\n  window.parent.postMessage({\n    queryString: \"\".concat(queryArg, \"=\").concat(elementId)\n  }, parentOrigin);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/syncHFSpacesURLHash.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;